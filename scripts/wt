#!/bin/bash
# Usage: worktree <worktree-name> <branch-name>
# Creates a Git worktree in ~/dev/worktrees/REPO-worktree-name/
# Must be run from within a Git repository

# Check if we have the required arguments
if [ -z "$1" ] || [ -z "$2" ]; then
  echo "Usage: $0 <worktree-name> <branch-name>"
  echo "  <worktree-name>: Name for this worktree instance"
  echo "  <branch-name>: Branch to checkout in the worktree"
  exit 1
fi

WORKTREE_NAME="$1"
BRANCH_NAME="$2"

# Check if we're in a Git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "Error: Not inside a Git repository. Please run this script from within a Git repository."
  exit 1
fi

# Get the repository name (dirname of the current git repo)
REPO_ROOT=$(git rev-parse --show-toplevel)
REPO_NAME=$(basename "$REPO_ROOT")

# Create the target worktree directory
WORKTREE_PATH="$HOME/dev/worktrees/${REPO_NAME}-${WORKTREE_NAME}"

# Check if the worktree directory already exists
if [ -d "$WORKTREE_PATH" ]; then
  echo "Error: Worktree directory already exists: $WORKTREE_PATH"
  exit 1
fi

# Check if the branch exists
if ! git show-ref --verify --quiet "refs/heads/$BRANCH_NAME"; then
  # Branch doesn't exist, ask if we should create it
  read -p "Branch '$BRANCH_NAME' doesn't exist. Create it? (y/n) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "Creating branch '$BRANCH_NAME'..."
    git branch "$BRANCH_NAME"
  else
    echo "Operation cancelled."
    exit 1
  fi
fi

# Create the worktree
echo "Creating worktree '$WORKTREE_NAME' for branch '$BRANCH_NAME' at $WORKTREE_PATH"
git worktree add "$WORKTREE_PATH" "$BRANCH_NAME"

# Check if the worktree was created successfully
if [ $? -eq 0 ]; then
  echo "Worktree created successfully."
  echo "To navigate to your new worktree: cd $WORKTREE_PATH"
else
  echo "Error creating worktree. Please check the error messages above."
  exit 1
fi
